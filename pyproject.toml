[project]
name = "devops-deployment-metrics"
version = "0.0.1"
description = "DevOps Deployment Metrics"
authors = [{ name = "Flexion, Inc.", email = "noreply@flexion.us" }]
requires-python = "~=3.9"
readme = "README.md"
license = "MIT"
classifiers = ["Development Status :: 1 - Planning"]
dependencies = [
    "click>=8.0.1",
    "pandas>=2.0.0,<3",
    "argparse>=1.4.0,<2",
    "toml>=0.10.2,<0.11",
    "python-dotenv>=1.0.0,<2",
    "PyGitHub>=2.0.0,<3",
    "tqdm>=4.65.0,<5",
    "pyyaml~=6.0",
    "idna~=3.7",
]

[project.urls]
Homepage = "https://github.com/flexion/devops-deployment-metrics"
Repository = "https://github.com/flexion/devops-deployment-metrics"
Documentation = "https://devops-deployment-metrics.readthedocs.io"
Changelog = "https://github.com/flexion/devops-deployment-metrics/releases"

[project.scripts]
devops-deployment-metrics = "devops_deployment_metrics.__main__:main"

[dependency-groups]
dev = [
    "nox>=2025.5.1",
    "ruff>=0.12,<0.13",
    "pytest-benchmark>=5.0.0,<6",
    "Pygments>=2.10.0",
    "coverage[toml]>=6.2",
    "furo>=2021.11.12",
    "mypy>=0.930",
    "pre-commit>=2.16.0",
    "pre-commit-hooks>=4.1.0",
    "pytest>=6.2.5",
    "pytest-mock>=3.10.0,<4",
    "pyupgrade>=2.29.1",
    "safety>=2.3.5",
    "sphinx>=4.3.2",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-click>=3.0.2",
    "typeguard>=2.13.3",
    "xdoctest[colors]>=0.15.10",
    "myst-parser>=0.16.1",
    "types-toml>=0.10.8.6,<0.11",
    "types-pyyaml>=6.0.12.10,<7",
    "pandas-stubs>=2.0.1.230501,<3",
    "types-tqdm>=4.65.0.1,<5",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["devops_deployment_metrics", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 25

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`)
# pycodestyle (`E`)
# pycodestyle warnings (`W`)
# McCabe complexity (`C901`)
# pep8 naming ("N")
# isort ("I")
select = ["F","B","E","I","W","S","C901"]
ignore = ["E203","E501"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S101","D103"]
"tests/test_utils.py" = ["S105"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
#python_files = "test*.py"  # to discover testA.py and testB.py
pythonpath = "src"

[tools.uv.build-backend]
module-name = "devops-deployment-metrics"
