name: Tests # Run tests and upload coverage

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.9", os: "ubuntu-latest", session: "tests" }
          - { python: "3.10", os: "ubuntu-latest", session: "tests" }
          - { python: "3.11", os: "ubuntu-latest", session: "pre-commit" }
          - { python: "3.11", os: "ubuntu-latest", session: "xdoctest" }
          - { python: "3.11", os: "ubuntu-latest", session: "docs-build" }
          - { python: "3.11", os: "ubuntu-latest", session: "tests" }
          - { python: "3.11", os: "windows-latest", session: "tests" }
          - { python: "3.11", os: "ubuntu-latest", session: "pip-audit" }

    #          - { python: "3.10", os: "ubuntu-latest", session: "mypy" }
    #          - { python: "3.9", os: "ubuntu-latest", session: "mypy" }
    #          - { python: "3.10", os: "ubuntu-latest", session: "typeguard" }

    env:
      NOXSESSION: ${{ matrix.session }}
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          disable-telemetry: false
          allowed-endpoints: >
            auth.docker.io:443
            files.pythonhosted.org:443
            ghcr.io:443
            github.com:443
            pkg-containers.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            registry-1.docker.io:443
            registry.npmjs.org:443

      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install UV
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt uv
          uv --version

      - name: Install Nox
        run: |
          uvx pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          nox --version

      - name: Compute pre-commit cache key
        if: matrix.session == 'pre-commit'
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys
          import os

          env_file = os.getenv("GITHUB_ENV")
          python="py{}.{}".format(*sys.version_info[:2])
          payload=sys.version.encode() + sys.executable.encode()
          digest=hashlib.sha256(payload).hexdigest()
          cache_key="${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])
          with open(env_file, "a") as my_file:
            my_file.write(f"PC_CACHE_KEY={cache_key}")

      - name: Restore pre-commit cache
        uses: actions/cache@0c907a75c2c80ebcb7f088228285e798b750cf8f # v4.2.1
        if: matrix.session == 'pre-commit'
        with:
          path: ~/.cache/pre-commit
          key: ${{ env.PC_CACHE_KEY }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ env.PC_CACHE_KEY }}-

      - name: Run Nox
        env:
          UV_PREVIEW: 1
        run: |
          nox --python=${{ matrix.python }}

      - name: Upload coverage data
        if: always() && matrix.session == 'tests' && matrix.python == '3.11' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          # Hack for v4.4 hidden file change
          name: coverage-data
          path: ".coverage*"
          include-hidden-files: true

      - name: Upload documentation
        if: matrix.session == 'docs-build'
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: docs
          path: docs/_build

  coverage:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install UV
        run: |
          pipx install --pip-args=--constraint=.github/workflows/constraints.txt uv
          uv --version

      - name: Install Nox
        run: |
          uvx pipx install --pip-args=--constraint=.github/workflows/constraints.txt nox
          nox --version

      - name: Download coverage data
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: coverage-data

      - name: Combine coverage data and display human readable report
        env:
          UV_PREVIEW: 1
        run: |
          nox --session=coverage

      - name: Create coverage report
        env:
          UV_PREVIEW: 1
        run: |
          nox --session=coverage -- xml

      - name: Upload coverage report
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
